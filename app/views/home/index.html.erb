<div class="container">
  <div class="search-box">
    <div class="card">
      <div class="card-body search-card">
        <%= form_tag doctor_search_result_path, method: :get do %>
          <div class="input-group mb-3">  
            <%= text_field_tag :q, nil, class: "form-control input-lg", placeholder: "Search doctor by specialization area / symptoms / disease", "aria-describedby" => "basic-addon2" %>
            <div class="input-group-append">
              <%= submit_tag "Search", class: "btn btn-primary btn-lg" %>
            </div>
          </div>
        <% end %>
        
        <div class="mt-2 mb-2">
          <h4 class="text-center">OR</h4>
        </div>
        <%= form_for :doctor_search, url: :advanced_search, method: :get do |f| %>
          <div class="input-group mb-3">  
            <%= f.text_field :location, class: "form-control input-lg", "aria-describedby" => "basic-addon2", id: "autocomplete", placeholder: "Search doctors by location",
             onFocus: "geolocate()" %>
            <%= f.hidden_field :latitude, id: :doctor_latitude %>
            <%= f.hidden_field :longitude, id: :doctor_longitude %>
            <div class="input-group-append">
              <%= f.submit "Search", class: "btn btn-primary btn-lg" %>
            </div>
          </div>
        <% end %>
      </div>
    </div>
  </div>
  <div class="doctors-grid">
    <h2 class="text-center">Our Top Rated Doctors</h2>
    <div class="row">
      <% @doctors.each do |doctor| %>
        <div class="col-md-4 col-sm-4 col-xs-12">
          <div class="card doctor-card">
            <%= image_tag doctor.profile_photo_url, class: "card-img-top" if doctor.profile_photo_url.present? %>
            <div class="card-body">
              <h5 class="card-title"><%= doctor.name %></h5>
              <p class="card-text"><i class="fa fa-map-marker"></i> <%= doctor.full_address %></p>
              <%= link_to doctor_path(doctor), class: "btn btn-primary" do %>
                <i class="fa fa-eye"></i> View Details
              <% end %>
            </div>
          </div>
        </div>
      <% end %>
    </div>
  </div>
</div>

 <script>
  var placeSearch, autocomplete;
  var componentForm = {
    street_number: 'short_name',
    route: 'long_name',
    locality: 'long_name',
    administrative_area_level_1: 'short_name',
    country: 'long_name',
    postal_code: 'short_name'
  };

  function initAutocomplete() {
    autocomplete = new google.maps.places.Autocomplete(
      (document.getElementById('autocomplete')),
        {types: ['geocode']});

    autocomplete.addListener('place_changed', fillInAddress);
  }

  function fillInAddress() {
    var place = autocomplete.getPlace();
    lat = place.geometry.location.lat();
    long = place.geometry.location.lng();

    $("#doctor_latitude").val(lat);
    $("#doctor_longitude").val(long);

    for (var component in componentForm) {
      document.getElementById(component).value = '';
      document.getElementById(component).disabled = false;
    }
    for (var i = 0; i < place.address_components.length; i++) {
      var addressType = place.address_components[i].types[0];
      if (componentForm[addressType]) {
        var val = place.address_components[i][componentForm[addressType]];
        document.getElementById(addressType).value = val;
      }
    }
  }
  function geolocate() {
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        var geolocation = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        var circle = new google.maps.Circle({
          center: geolocation,
          radius: position.coords.accuracy
        });
        autocomplete.setBounds(circle.getBounds());
      });
    }
  }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCCGG6jVWyZDiUH3DD6YQLxGcmLlP5V6FA&libraries=places&callback=initAutocomplete"
        async defer></script>